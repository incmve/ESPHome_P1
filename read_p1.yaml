substitutions:
  device_name: esphome_p1

esphome:
  name: '${device_name}'
  platform: ESP8266
  board: nodemcu
  includes:
    - esphome_p1/dsmr_p1_sensor.h


wifi:
  ssid: !secret iotwifiDWNssid
  password: !secret iotwifiDWNpwd
  ap:
    ssid: "FALLBACK AP ${device_name}"
    password: !secret fallbackpwd
  
web_server:
  port: 80

captive_portal:

logger:
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

sensor:
  - platform: custom
    lambda: |-
      auto dsmr_p1_sensor = new DsmrP1CustomSensor();
      App.register_component(dsmr_p1_sensor);
      return {dsmr_p1_sensor->consumption_low_tarif_sensor, dsmr_p1_sensor->consumption_high_tarif_sensor, dsmr_p1_sensor->return_low_tarif_sensor, dsmr_p1_sensor->return_high_tarif_sensor, dsmr_p1_sensor->actual_consumption_sensor, dsmr_p1_sensor->actual_return_sensor, dsmr_p1_sensor->actual_tarif_sensor};
    sensors:
    - name: "Consumption Low Tarif Sensor"
      unit_of_measurement: kWh
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
    - name: "Consumption High Tarif Sensor"
      unit_of_measurement: kWh
      accuracy_decimals: 3  
      filters:
        - multiply: 0.001
    - name: "Return Low Tarif Sensor"
      unit_of_measurement: kWh
      accuracy_decimals: 3
      filters:
        - multiply: 0.001
    - name: "Return High Tarif Sensor"
      unit_of_measurement: kWh
      accuracy_decimals: 3  
      filters:
        - multiply: 0.001
    - name: "Actual Consumption Sensor"
      unit_of_measurement: kW
      accuracy_decimals: 2      
      filters:
        - multiply: 0.001
    - name: "Actual Return Sensor"
      unit_of_measurement: kW
      accuracy_decimals: 2      
      filters:
        - multiply: 0.001
    - name: "Actual Tarif Sensor"
